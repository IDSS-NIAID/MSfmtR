% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_peptides.R
\name{process_peptides}
\alias{process_peptides}
\title{process_peptides
Process peptides from raw data}
\usage{
process_peptides(
  data,
  config,
  save_intermediate = TRUE,
  peptide_rollup_fun = function(x) median(x, na.rm = TRUE),
  ...
)
}
\arguments{
\item{data}{MSstats formatted data}

\item{config}{list of configuration parameters}

\item{save_intermediate}{logical save intermediate data}

\item{peptide_rollup_fun}{function to use for rolling up peptide data to the elution group level. Default is median.}

\item{...}{additional arguments to pass to `updt_config`}
}
\value{
data frame of processed peptide data
}
\description{
process_peptides
Process peptides from raw data
}
\details{
This function processes MSstats formatted data and returns peptides ready for ProtResDash. If save_intermediate is TRUE, the processed data are also saved to the checkpoint file.

If `merge_method` is 'median' (default), the function will use the median within `data$FeatureLevelData$GROUP` (or `config$groups` when defined) for group-level peptide abundance statistics.

If `merge_method` is 'mean', the function will use the mean within `data$FratureLevelData$GROUP` (or `config$groups` when defined) for group-level peptide abundance statistics.

If `merge_method` is 'lmer', the function will use a linear mixed effects model to estimate group-level peptide abundance statistics within `data$FratureLevelData$GROUP` (or `config$groups` when defined) and using random effects for `config$samples` (e.g. for technical replicates).
}
